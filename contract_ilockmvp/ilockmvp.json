{
  "source": {
    "hash": "0xda5d25acfd749e9655d13d3ea80a15df279bb6db001eebb2e255ae36225387de",
    "language": "ink! 4.3.0",
    "compiler": "rustc 1.70.0-nightly",
    "build_info": {
      "build_mode": "Debug",
      "cargo_contract_version": "4.0.2",
      "rust_toolchain": "nightly-aarch64-apple-darwin",
      "wasm_opt_settings": {
        "keep_debug_symbols": false,
        "optimization_passes": "Z"
      }
    }
  },
  "contract": {
    "name": "ilockmvp",
    "version": "0.1.0",
    "authors": [
      "Interlock Network <smartcontracts@interlock.network>",
      "Blair Munro <blairmunroakusa@gmail.com>",
      "Alessandro Baldassarre <alessandro.baldassarre.dev@gmail.com>"
    ],
    "license": "GNU GENERAL PUBLIC LICENSE"
  },
  "image": null,
  "spec": {
    "constructors": [
      {
        "args": [
          {
            "label": "timelimit",
            "type": {
              "displayName": [
                "Timestamp"
              ],
              "type": 10
            }
          },
          {
            "label": "signatory_2",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 2
            }
          },
          {
            "label": "signatory_3",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 2
            }
          }
        ],
        "default": false,
        "docs": [
          "- Constructor to initialize contract."
        ],
        "label": "new_token",
        "payable": false,
        "returnType": {
          "displayName": [
            "ink_primitives",
            "ConstructorResult"
          ],
          "type": 16
        },
        "selector": "0x7d97ec7b"
      }
    ],
    "docs": [],
    "environment": {
      "accountId": {
        "displayName": [
          "AccountId"
        ],
        "type": 2
      },
      "balance": {
        "displayName": [
          "Balance"
        ],
        "type": 0
      },
      "blockNumber": {
        "displayName": [
          "BlockNumber"
        ],
        "type": 54
      },
      "chainExtension": {
        "displayName": [
          "ChainExtension"
        ],
        "type": 55
      },
      "hash": {
        "displayName": [
          "Hash"
        ],
        "type": 11
      },
      "maxEventTopics": 4,
      "timestamp": {
        "displayName": [
          "Timestamp"
        ],
        "type": 10
      }
    },
    "events": [
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "from",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 53
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "to",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 53
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "amount",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 0
            }
          }
        ],
        "docs": [
          "- Specify transfer event."
        ],
        "label": "Transfer"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "owner",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 53
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "spender",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 53
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "amount",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 0
            }
          }
        ],
        "docs": [
          "- Specify approval event."
        ],
        "label": "Approval"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "to",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 53
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "amount",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 0
            }
          }
        ],
        "docs": [
          "- Specify reward event."
        ],
        "label": "Reward"
      }
    ],
    "lang_error": {
      "displayName": [
        "ink",
        "LangError"
      ],
      "type": 19
    },
    "messages": [
      {
        "args": [
          {
            "label": "function",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 5
            }
          }
        ],
        "default": false,
        "docs": [
          " - Function to order multisigtx transaction."
        ],
        "label": "order_multisigtx",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0x927b274e"
      },
      {
        "args": [
          {
            "label": "function",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 5
            }
          }
        ],
        "default": false,
        "docs": [
          " - A multisigtx signer calls this to sign."
        ],
        "label": "sign_multisigtx",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0xc4b7baf4"
      },
      {
        "args": [
          {
            "label": "signatory",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 2
            }
          },
          {
            "label": "function",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 5
            }
          }
        ],
        "default": false,
        "docs": [
          " - This adds a signatory from the list of permitted signatories."
        ],
        "label": "add_signatory",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0x31123fa6"
      },
      {
        "args": [
          {
            "label": "signatory",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 2
            }
          },
          {
            "label": "function",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 5
            }
          }
        ],
        "default": false,
        "docs": [
          " - This removes a signatory from the list of permitted signatories."
        ],
        "label": "remove_signatory",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0x77943642"
      },
      {
        "args": [
          {
            "label": "threshold",
            "type": {
              "displayName": [
                "u16"
              ],
              "type": 9
            }
          },
          {
            "label": "function",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 5
            }
          }
        ],
        "default": false,
        "docs": [
          " - This changes signer threshold for approving multisigtx."
        ],
        "label": "change_threshold",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0x1f154c5b"
      },
      {
        "args": [
          {
            "label": "timelimit",
            "type": {
              "displayName": [
                "Timestamp"
              ],
              "type": 10
            }
          },
          {
            "label": "function",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 5
            }
          }
        ],
        "default": false,
        "docs": [
          " - This modifies timelimit for a multisig transaction."
        ],
        "label": "change_multisigtxtimelimit",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0x69bf7126"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " - This gets the current signature threshold for multisigtx."
        ],
        "label": "threshold",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 20
        },
        "selector": "0x36d37def"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " - This gets the current timelimit for signatories to sign multisigtx."
        ],
        "label": "multisigtimelimit",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 21
        },
        "selector": "0xb1b0d396"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " - This gets a list of current accounts permitted to sign multisigtx."
        ],
        "label": "signatories",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 22
        },
        "selector": "0x37b44831"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " - This gets number of signatories permitted to sign multisigtx."
        ],
        "label": "signatory_count",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 24
        },
        "selector": "0xec78a0cc"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " - This gets current number of signatures for multisigtx."
        ],
        "label": "signature_count",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 24
        },
        "selector": "0xe560601f"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " - This gets a list of all signers so far on a multisigtx."
        ],
        "label": "check_signatures",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 25
        },
        "selector": "0x7986a69e"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " - Function pauses contract.",
          " - Any signatory may call."
        ],
        "label": "pause",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0x81e0c604"
      },
      {
        "args": [
          {
            "label": "function",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 5
            }
          }
        ],
        "default": false,
        "docs": [
          " - Function unpauses contract."
        ],
        "label": "unpause",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0x67616649"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " - Function to check if enough time has passed to collect next payout.",
          " - This function ensures Interlock cannot rush the vesting schedule.",
          " - This function must be called before the next round of token distributions."
        ],
        "label": "check_time",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0xd31e52e5"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " - Time in seconds until next payout in minutes."
        ],
        "label": "remaining_time",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 21
        },
        "selector": "0x9d9f09c9"
      },
      {
        "args": [
          {
            "label": "stakeholder",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 2
            }
          },
          {
            "label": "share",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 0
            }
          },
          {
            "label": "poolnumber",
            "type": {
              "displayName": [
                "u8"
              ],
              "type": 4
            }
          },
          {
            "label": "overwrite",
            "type": {
              "displayName": [
                "bool"
              ],
              "type": 6
            }
          }
        ],
        "default": false,
        "docs": [
          " - Function that registers a stakeholder's wallet and vesting info.",
          " - Data used to calculate vesting payouts and track net paid.",
          " - Stakeholder data also used for stakeholder to verify their place in vesting schedule."
        ],
        "label": "register_stakeholder",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0x2392e791"
      },
      {
        "args": [
          {
            "label": "stakeholder",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 2
            }
          }
        ],
        "default": false,
        "docs": [
          " - Function that returns stakeholder data for each stake.."
        ],
        "label": "get_stakes",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 27
        },
        "selector": "0xac55d82d"
      },
      {
        "args": [
          {
            "label": "stakeholder",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 2
            }
          }
        ],
        "default": false,
        "docs": [
          " - Function that returns a stakeholder's pay remaining for each stake."
        ],
        "label": "get_stakes_payremaining",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 29
        },
        "selector": "0xd0db66e3"
      },
      {
        "args": [
          {
            "label": "stakeholder",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 2
            }
          }
        ],
        "default": false,
        "docs": [
          " - Function that returns a stakeholder's payout amount for each stake."
        ],
        "label": "get_stakes_payamount",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 29
        },
        "selector": "0xe5108d36"
      },
      {
        "args": [
          {
            "label": "poolnumber",
            "type": {
              "displayName": [
                "u8"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " - General function for stakeholder to claim their own tokens per vesting schedule.",
          " - Pools are guaranteed to have enough tokens for all stakeholders."
        ],
        "label": "claim_tokens",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0xfbcfbf73"
      },
      {
        "args": [
          {
            "label": "stakeholder",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 2
            }
          },
          {
            "label": "amount",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 0
            }
          },
          {
            "label": "pool",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 5
            }
          }
        ],
        "default": false,
        "docs": [
          " - Function used to payout tokens to pools with no vesting schedule.",
          " POOL ARGUMENTS:",
          "      COMMUNITY",
          "      PROCEEDS"
        ],
        "label": "payout_tokens",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0x507bc4c7"
      },
      {
        "args": [
          {
            "label": "poolnumber",
            "type": {
              "displayName": [
                "u8"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " - Function that returns pool data in human readable format..",
          " - This will allow observers to verify vesting parameters for each pool (esp. theirs).",
          " - Observers may verify pool data from explorer if so motivated.",
          " - Pool numbers range from 0-11.",
          " - Returns (name, tokens, vests, cliff) (formatted for convenient for Substrate UI).."
        ],
        "label": "pool_data",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 32
        },
        "selector": "0x7ac34ddc"
      },
      {
        "args": [
          {
            "label": "poolnumber",
            "type": {
              "displayName": [
                "u8"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " - Get current balance of any vesting pool.",
          " - Provide human readable and numberic format."
        ],
        "label": "pool_balance",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 35
        },
        "selector": "0xdec95825"
      },
      {
        "args": [
          {
            "label": "reward",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 0
            }
          },
          {
            "label": "interlocker",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 2
            }
          }
        ],
        "default": false,
        "docs": [
          " - Reward the interlocker for browsing, etc.",
          " - This is a manual rewarding function, to override the socket formalism."
        ],
        "label": "reward_interlocker",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 35
        },
        "selector": "0xcd05fd19"
      },
      {
        "args": [
          {
            "label": "interlocker",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 2
            }
          }
        ],
        "default": false,
        "docs": [
          " - Get amount rewarded to interlocker to date."
        ],
        "label": "rewarded_interlocker_total",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 35
        },
        "selector": "0xfe7f2e38"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " - Get total amount rewarded to date."
        ],
        "label": "rewarded_total",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 37
        },
        "selector": "0x399151b1"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " - Function to get the number of vesting increments passed for contract."
        ],
        "label": "vest_increments_passed",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 20
        },
        "selector": "0x16f77bea"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " - Function to get the supply cap minted on TGE."
        ],
        "label": "cap",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 37
        },
        "selector": "0xb00b03c6"
      },
      {
        "args": [
          {
            "label": "newowner",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 2
            }
          },
          {
            "label": "function",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 5
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "transfer_ownership",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0x107e33ea"
      },
      {
        "args": [
          {
            "label": "code_hash",
            "type": {
              "displayName": [],
              "type": 3
            }
          },
          {
            "label": "function",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 5
            }
          }
        ],
        "default": false,
        "docs": [
          " - Modifies the code which is used to execute calls to this contract address.",
          " - This upgrades the token contract logic while using old state."
        ],
        "label": "update_contract",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0xa136e0e7"
      },
      {
        "args": [
          {
            "label": "codehash",
            "type": {
              "displayName": [
                "Hash"
              ],
              "type": 11
            }
          },
          {
            "label": "tax",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 0
            }
          },
          {
            "label": "cap",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 0
            }
          },
          {
            "label": "locked",
            "type": {
              "displayName": [
                "bool"
              ],
              "type": 6
            }
          },
          {
            "label": "number",
            "type": {
              "displayName": [
                "u16"
              ],
              "type": 9
            }
          },
          {
            "label": "owner",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 2
            }
          },
          {
            "label": "overwrite",
            "type": {
              "displayName": [
                "bool"
              ],
              "type": 6
            }
          },
          {
            "label": "function",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 5
            }
          }
        ],
        "default": false,
        "docs": [
          " - Create a new port that application contract can register with.",
          " - Each port tracks amount rewarded, tax collected, if it is locked or not, owner.",
          " - A locked port may only be registered by the Interlock Network foundation."
        ],
        "label": "create_port",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0x784c078a"
      },
      {
        "args": [
          {
            "label": "operator",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 2
            }
          },
          {
            "label": "portnumber",
            "type": {
              "displayName": [
                "u16"
              ],
              "type": 9
            }
          }
        ],
        "default": false,
        "docs": [
          " - Rewards/staking/application contracts register with this token contract here.",
          " - Contract must first register with token contract as port to allow connection via",
          " socket (ie, a port must first exist before a socket may form).."
        ],
        "label": "create_socket",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0x0975b966"
      },
      {
        "args": [
          {
            "label": "address",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 2
            }
          },
          {
            "label": "amount",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 0
            }
          },
          {
            "label": "_data",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 38
            }
          }
        ],
        "default": false,
        "docs": [
          " - Check for socket and apply custom logic after being called from application contract.",
          " - Application contract calls its socket to trigger internal logic defined by port.",
          " - Default parameters are address and amount or value.",
          " - Additional parameters may be encoded as _data: Vec<u8>."
        ],
        "label": "call_socket",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0x773a1acd"
      },
      {
        "args": [
          {
            "label": "application",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 2
            }
          }
        ],
        "default": false,
        "docs": [
          " - Get socket info."
        ],
        "label": "socket",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 39
        },
        "selector": "0x24a889e6"
      },
      {
        "args": [
          {
            "label": "portnumber",
            "type": {
              "displayName": [
                "u16"
              ],
              "type": 9
            }
          }
        ],
        "default": false,
        "docs": [
          " - Get port info."
        ],
        "label": "port",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 41
        },
        "selector": "0x6baaf517"
      },
      {
        "args": [
          {
            "label": "to",
            "type": {
              "displayName": [
                "psp22_external",
                "TransferInput1"
              ],
              "type": 2
            }
          },
          {
            "label": "value",
            "type": {
              "displayName": [
                "psp22_external",
                "TransferInput2"
              ],
              "type": 0
            }
          },
          {
            "label": "data",
            "type": {
              "displayName": [
                "psp22_external",
                "TransferInput3"
              ],
              "type": 38
            }
          }
        ],
        "default": false,
        "docs": [
          " - Override default transfer doer.",
          " - Transfer from owner increases total circulating supply.",
          " - Transfer to owner decreases total circulating supply."
        ],
        "label": "PSP22::transfer",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 43
        },
        "selector": "0xdb20f9f5"
      },
      {
        "args": [
          {
            "label": "spender",
            "type": {
              "displayName": [
                "psp22_external",
                "ApproveInput1"
              ],
              "type": 2
            }
          },
          {
            "label": "value",
            "type": {
              "displayName": [
                "psp22_external",
                "ApproveInput2"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " - Wrap default approve doer to enforce pausable macro."
        ],
        "label": "PSP22::approve",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 43
        },
        "selector": "0xb20f1bbd"
      },
      {
        "args": [
          {
            "label": "from",
            "type": {
              "displayName": [
                "psp22_external",
                "TransferFromInput1"
              ],
              "type": 2
            }
          },
          {
            "label": "to",
            "type": {
              "displayName": [
                "psp22_external",
                "TransferFromInput2"
              ],
              "type": 2
            }
          },
          {
            "label": "value",
            "type": {
              "displayName": [
                "psp22_external",
                "TransferFromInput3"
              ],
              "type": 0
            }
          },
          {
            "label": "data",
            "type": {
              "displayName": [
                "psp22_external",
                "TransferFromInput4"
              ],
              "type": 38
            }
          }
        ],
        "default": false,
        "docs": [
          " - Override default transfer_from_to doer.",
          " - Transfer from owner increases total supply."
        ],
        "label": "PSP22::transfer_from",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 43
        },
        "selector": "0x54b3c76e"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " - Override default total_supply getter.",
          " - Total supply reflects token in circulation."
        ],
        "label": "PSP22::total_supply",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 37
        },
        "selector": "0x162df8c2"
      },
      {
        "args": [
          {
            "label": "spender",
            "type": {
              "displayName": [
                "psp22_external",
                "IncreaseAllowanceInput1"
              ],
              "type": 2
            }
          },
          {
            "label": "delta_value",
            "type": {
              "displayName": [
                "psp22_external",
                "IncreaseAllowanceInput2"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " - Wrap default increase allowance doer to enforce pausable macro."
        ],
        "label": "PSP22::increase_allowance",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 43
        },
        "selector": "0x96d6b57a"
      },
      {
        "args": [
          {
            "label": "owner",
            "type": {
              "displayName": [
                "psp22_external",
                "BalanceOfInput1"
              ],
              "type": 2
            }
          }
        ],
        "default": false,
        "docs": [
          " Returns the account Balance for the specified `owner`.",
          "",
          " Returns `0` if the account is non-existent."
        ],
        "label": "PSP22::balance_of",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 37
        },
        "selector": "0x6568382f"
      },
      {
        "args": [
          {
            "label": "owner",
            "type": {
              "displayName": [
                "psp22_external",
                "AllowanceInput1"
              ],
              "type": 2
            }
          },
          {
            "label": "spender",
            "type": {
              "displayName": [
                "psp22_external",
                "AllowanceInput2"
              ],
              "type": 2
            }
          }
        ],
        "default": false,
        "docs": [
          " Returns the amount which `spender` is still allowed to withdraw from `owner`.",
          "",
          " Returns `0` if no allowance has been set `0`."
        ],
        "label": "PSP22::allowance",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 37
        },
        "selector": "0x4d47d921"
      },
      {
        "args": [
          {
            "label": "spender",
            "type": {
              "displayName": [
                "psp22_external",
                "DecreaseAllowanceInput1"
              ],
              "type": 2
            }
          },
          {
            "label": "delta_value",
            "type": {
              "displayName": [
                "psp22_external",
                "DecreaseAllowanceInput2"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " - Wrap default decrease allowance doer to enforce pausable macro."
        ],
        "label": "PSP22::decrease_allowance",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 43
        },
        "selector": "0xfecb57d5"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Returns the token symbol."
        ],
        "label": "PSP22Metadata::token_symbol",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 46
        },
        "selector": "0x34205be5"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Returns the token name."
        ],
        "label": "PSP22Metadata::token_name",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 46
        },
        "selector": "0x3d261bd4"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Returns the token decimals."
        ],
        "label": "PSP22Metadata::token_decimals",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 24
        },
        "selector": "0x7271b782"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Returns true if the contract is paused, and false otherwise."
        ],
        "label": "Pausable::paused",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 48
        },
        "selector": "0xd123ce11"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Returns the address of the current owner."
        ],
        "label": "Ownable::owner",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 49
        },
        "selector": "0x4fa43c8c"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " - Nobody can renounce ownership..does nothing."
        ],
        "label": "Ownable::renounce_ownership",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 50
        },
        "selector": "0x5e228753"
      },
      {
        "args": [
          {
            "label": "new_owner",
            "type": {
              "displayName": [
                "ownable_external",
                "TransferOwnershipInput1"
              ],
              "type": 2
            }
          }
        ],
        "default": false,
        "docs": [
          " - Nobody can transfer ownership..does nothing.",
          " - Transfer ownership implemented before update_contract() with multisigtx"
        ],
        "label": "Ownable::transfer_ownership",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 50
        },
        "selector": "0x11f43efd"
      }
    ]
  },
  "storage": {
    "root": {
      "layout": {
        "struct": {
          "fields": [
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 0
                        }
                      },
                      "name": "supply"
                    },
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "leaf": {
                              "key": "0x1d458d3b",
                              "ty": 0
                            }
                          },
                          "root_key": "0x1d458d3b"
                        }
                      },
                      "name": "balances"
                    },
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "leaf": {
                              "key": "0x0abd72fb",
                              "ty": 0
                            }
                          },
                          "root_key": "0x0abd72fb"
                        }
                      },
                      "name": "allowances"
                    },
                    {
                      "layout": {
                        "enum": {
                          "dispatchKey": "0x00000000",
                          "name": "Option",
                          "variants": {
                            "0": {
                              "fields": [],
                              "name": "None"
                            },
                            "1": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x00000000",
                                      "ty": 1
                                    }
                                  },
                                  "name": "0"
                                }
                              ],
                              "name": "Some"
                            }
                          }
                        }
                      },
                      "name": "_reserved"
                    }
                  ],
                  "name": "Data"
                }
              },
              "name": "psp22"
            },
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 2
                        }
                      },
                      "name": "owner"
                    },
                    {
                      "layout": {
                        "enum": {
                          "dispatchKey": "0x00000000",
                          "name": "Option",
                          "variants": {
                            "0": {
                              "fields": [],
                              "name": "None"
                            },
                            "1": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x00000000",
                                      "ty": 1
                                    }
                                  },
                                  "name": "0"
                                }
                              ],
                              "name": "Some"
                            }
                          }
                        }
                      },
                      "name": "_reserved"
                    }
                  ],
                  "name": "Data"
                }
              },
              "name": "ownable"
            },
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "enum": {
                          "dispatchKey": "0x00000000",
                          "name": "Option",
                          "variants": {
                            "0": {
                              "fields": [],
                              "name": "None"
                            },
                            "1": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x00000000",
                                      "ty": 5
                                    }
                                  },
                                  "name": "0"
                                }
                              ],
                              "name": "Some"
                            }
                          }
                        }
                      },
                      "name": "name"
                    },
                    {
                      "layout": {
                        "enum": {
                          "dispatchKey": "0x00000000",
                          "name": "Option",
                          "variants": {
                            "0": {
                              "fields": [],
                              "name": "None"
                            },
                            "1": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x00000000",
                                      "ty": 5
                                    }
                                  },
                                  "name": "0"
                                }
                              ],
                              "name": "Some"
                            }
                          }
                        }
                      },
                      "name": "symbol"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 4
                        }
                      },
                      "name": "decimals"
                    },
                    {
                      "layout": {
                        "enum": {
                          "dispatchKey": "0x00000000",
                          "name": "Option",
                          "variants": {
                            "0": {
                              "fields": [],
                              "name": "None"
                            },
                            "1": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x00000000",
                                      "ty": 1
                                    }
                                  },
                                  "name": "0"
                                }
                              ],
                              "name": "Some"
                            }
                          }
                        }
                      },
                      "name": "_reserved"
                    }
                  ],
                  "name": "Data"
                }
              },
              "name": "metadata"
            },
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 6
                        }
                      },
                      "name": "paused"
                    },
                    {
                      "layout": {
                        "enum": {
                          "dispatchKey": "0x00000000",
                          "name": "Option",
                          "variants": {
                            "0": {
                              "fields": [],
                              "name": "None"
                            },
                            "1": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x00000000",
                                      "ty": 1
                                    }
                                  },
                                  "name": "0"
                                }
                              ],
                              "name": "Some"
                            }
                          }
                        }
                      },
                      "name": "_reserved"
                    }
                  ],
                  "name": "Data"
                }
              },
              "name": "pausable"
            },
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "leaf": {
                              "key": "0x0dc3753d",
                              "ty": 0
                            }
                          },
                          "root_key": "0x0dc3753d"
                        }
                      },
                      "name": "interlocker"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 0
                        }
                      },
                      "name": "total"
                    },
                    {
                      "layout": {
                        "enum": {
                          "dispatchKey": "0x00000000",
                          "name": "Option",
                          "variants": {
                            "0": {
                              "fields": [],
                              "name": "None"
                            },
                            "1": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x00000000",
                                      "ty": 1
                                    }
                                  },
                                  "name": "0"
                                }
                              ],
                              "name": "Some"
                            }
                          }
                        }
                      },
                      "name": "_reserved"
                    }
                  ],
                  "name": "RewardData"
                }
              },
              "name": "reward"
            },
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "leaf": {
                              "key": "0x3f6ae4ff",
                              "ty": 7
                            }
                          },
                          "root_key": "0x3f6ae4ff"
                        }
                      },
                      "name": "stakeholder"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 9
                        }
                      },
                      "name": "vestincrementspassed"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 10
                        }
                      },
                      "name": "nextpayout"
                    },
                    {
                      "layout": {
                        "enum": {
                          "dispatchKey": "0x00000000",
                          "name": "Option",
                          "variants": {
                            "0": {
                              "fields": [],
                              "name": "None"
                            },
                            "1": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x00000000",
                                      "ty": 1
                                    }
                                  },
                                  "name": "0"
                                }
                              ],
                              "name": "Some"
                            }
                          }
                        }
                      },
                      "name": "_reserved"
                    }
                  ],
                  "name": "VestData"
                }
              },
              "name": "vest"
            },
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "struct": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0xb5b92196",
                                      "ty": 11
                                    }
                                  },
                                  "name": "application"
                                },
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0xb5b92196",
                                      "ty": 0
                                    }
                                  },
                                  "name": "tax"
                                },
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0xb5b92196",
                                      "ty": 0
                                    }
                                  },
                                  "name": "cap"
                                },
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0xb5b92196",
                                      "ty": 6
                                    }
                                  },
                                  "name": "locked"
                                },
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0xb5b92196",
                                      "ty": 0
                                    }
                                  },
                                  "name": "paid"
                                },
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0xb5b92196",
                                      "ty": 0
                                    }
                                  },
                                  "name": "collected"
                                },
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0xb5b92196",
                                      "ty": 2
                                    }
                                  },
                                  "name": "owner"
                                }
                              ],
                              "name": "Port"
                            }
                          },
                          "root_key": "0xb5b92196"
                        }
                      },
                      "name": "ports"
                    },
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "struct": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0xbfd83de0",
                                      "ty": 2
                                    }
                                  },
                                  "name": "operator"
                                },
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0xbfd83de0",
                                      "ty": 9
                                    }
                                  },
                                  "name": "portnumber"
                                }
                              ],
                              "name": "Socket"
                            }
                          },
                          "root_key": "0xbfd83de0"
                        }
                      },
                      "name": "sockets"
                    },
                    {
                      "layout": {
                        "enum": {
                          "dispatchKey": "0x00000000",
                          "name": "Option",
                          "variants": {
                            "0": {
                              "fields": [],
                              "name": "None"
                            },
                            "1": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x00000000",
                                      "ty": 1
                                    }
                                  },
                                  "name": "0"
                                }
                              ],
                              "name": "Some"
                            }
                          }
                        }
                      },
                      "name": "_reserved"
                    }
                  ],
                  "name": "AppData"
                }
              },
              "name": "app"
            },
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "struct": {
                          "fields": [
                            {
                              "layout": {
                                "struct": {
                                  "fields": [
                                    {
                                      "layout": {
                                        "leaf": {
                                          "key": "0x00000000",
                                          "ty": 2
                                        }
                                      },
                                      "name": "address"
                                    }
                                  ],
                                  "name": "AccountID"
                                }
                              },
                              "name": "orderer"
                            },
                            {
                              "layout": {
                                "leaf": {
                                  "key": "0x00000000",
                                  "ty": 12
                                }
                              },
                              "name": "signatures"
                            },
                            {
                              "layout": {
                                "leaf": {
                                  "key": "0x00000000",
                                  "ty": 4
                                }
                              },
                              "name": "function"
                            },
                            {
                              "layout": {
                                "leaf": {
                                  "key": "0x00000000",
                                  "ty": 10
                                }
                              },
                              "name": "time"
                            },
                            {
                              "layout": {
                                "leaf": {
                                  "key": "0x00000000",
                                  "ty": 6
                                }
                              },
                              "name": "complete"
                            }
                          ],
                          "name": "Transaction"
                        }
                      },
                      "name": "tx"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 15
                        }
                      },
                      "name": "signatories"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 9
                        }
                      },
                      "name": "threshold"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 10
                        }
                      },
                      "name": "timelimit"
                    },
                    {
                      "layout": {
                        "enum": {
                          "dispatchKey": "0x00000000",
                          "name": "Option",
                          "variants": {
                            "0": {
                              "fields": [],
                              "name": "None"
                            },
                            "1": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x00000000",
                                      "ty": 1
                                    }
                                  },
                                  "name": "0"
                                }
                              ],
                              "name": "Some"
                            }
                          }
                        }
                      },
                      "name": "_reserved"
                    }
                  ],
                  "name": "MultisigData"
                }
              },
              "name": "multisig"
            },
            {
              "layout": {
                "array": {
                  "layout": {
                    "leaf": {
                      "key": "0x00000000",
                      "ty": 0
                    }
                  },
                  "len": 7,
                  "offset": "0x00000000"
                }
              },
              "name": "balances"
            }
          ],
          "name": "ILOCKmvp"
        }
      },
      "root_key": "0x00000000"
    }
  },
  "types": [
    {
      "id": 0,
      "type": {
        "def": {
          "primitive": "u128"
        }
      }
    },
    {
      "id": 1,
      "type": {
        "def": {
          "tuple": []
        }
      }
    },
    {
      "id": 2,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 3,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "AccountId"
        ]
      }
    },
    {
      "id": 3,
      "type": {
        "def": {
          "array": {
            "len": 32,
            "type": 4
          }
        }
      }
    },
    {
      "id": 4,
      "type": {
        "def": {
          "primitive": "u8"
        }
      }
    },
    {
      "id": 5,
      "type": {
        "def": {
          "primitive": "str"
        }
      }
    },
    {
      "id": 6,
      "type": {
        "def": {
          "primitive": "bool"
        }
      }
    },
    {
      "id": 7,
      "type": {
        "def": {
          "sequence": {
            "type": 8
          }
        }
      }
    },
    {
      "id": 8,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "paid",
                "type": 0,
                "typeName": "Balance"
              },
              {
                "name": "share",
                "type": 0,
                "typeName": "Balance"
              },
              {
                "name": "pool",
                "type": 4,
                "typeName": "u8"
              }
            ]
          }
        },
        "path": [
          "ilockmvp",
          "ilockmvp",
          "StakeholderData"
        ]
      }
    },
    {
      "id": 9,
      "type": {
        "def": {
          "primitive": "u16"
        }
      }
    },
    {
      "id": 10,
      "type": {
        "def": {
          "primitive": "u64"
        }
      }
    },
    {
      "id": 11,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 3,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "Hash"
        ]
      }
    },
    {
      "id": 12,
      "type": {
        "def": {
          "sequence": {
            "type": 13
          }
        }
      }
    },
    {
      "id": 13,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "signer",
                "type": 14,
                "typeName": "AccountID"
              },
              {
                "name": "time",
                "type": 10,
                "typeName": "Timestamp"
              }
            ]
          }
        },
        "path": [
          "ilockmvp",
          "ilockmvp",
          "Signature"
        ]
      }
    },
    {
      "id": 14,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "address",
                "type": 2,
                "typeName": "AccountId"
              }
            ]
          }
        },
        "path": [
          "ilockmvp",
          "ilockmvp",
          "AccountID"
        ]
      }
    },
    {
      "id": 15,
      "type": {
        "def": {
          "sequence": {
            "type": 14
          }
        }
      }
    },
    {
      "id": 16,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 17
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 17
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 17,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 1
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 1
          },
          {
            "name": "E",
            "type": 18
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 18,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "CallerNotOwner"
              },
              {
                "index": 1,
                "name": "StakeholderSharePaid"
              },
              {
                "index": 2,
                "name": "StakeholderNotFound"
              },
              {
                "index": 3,
                "name": "CliffNotPassed"
              },
              {
                "index": 4,
                "name": "PayoutTooEarly"
              },
              {
                "index": 5,
                "name": "PaymentTooLarge"
              },
              {
                "index": 6,
                "name": "NoSocket"
              },
              {
                "index": 7,
                "name": "NoPort"
              },
              {
                "index": 8,
                "name": "NotContract"
              },
              {
                "index": 9,
                "name": "PortLocked"
              },
              {
                "index": 10,
                "name": "PortCapSurpassed"
              },
              {
                "index": 11,
                "name": "CannotRewardContract"
              },
              {
                "index": 12,
                "name": "UnsafeContract"
              },
              {
                "index": 13,
                "name": "CallerNotOperator"
              },
              {
                "index": 14,
                "name": "CallerIsOwner"
              },
              {
                "index": 15,
                "name": "Overflow"
              },
              {
                "index": 16,
                "name": "Underflow"
              },
              {
                "index": 17,
                "name": "DivError"
              },
              {
                "index": 18,
                "name": "ShareTooSmall"
              },
              {
                "index": 19,
                "name": "InvalidPool"
              },
              {
                "index": 20,
                "name": "InvalidPort"
              },
              {
                "index": 21,
                "name": "AlreadyRegistered"
              },
              {
                "index": 22,
                "name": "NoPool"
              },
              {
                "index": 23,
                "name": "NoStake"
              },
              {
                "index": 24,
                "name": "IsZeroAddress"
              },
              {
                "index": 25,
                "name": "PoolOutOfBounds"
              },
              {
                "index": 26,
                "name": "DivideByZero"
              },
              {
                "index": 27,
                "name": "PortExists"
              },
              {
                "index": 28,
                "name": "CapTooLarge"
              },
              {
                "index": 29,
                "name": "NoTransaction"
              },
              {
                "index": 30,
                "name": "TransactionAlreadyCompleted"
              },
              {
                "index": 31,
                "name": "TransactionAlreadyOrdered"
              },
              {
                "index": 32,
                "name": "InsufficientIlockBalance"
              },
              {
                "index": 33,
                "name": "AlreadyOrdered"
              },
              {
                "index": 34,
                "name": "InvalidFunction"
              },
              {
                "index": 35,
                "name": "CallerNotSignatory"
              },
              {
                "index": 36,
                "name": "CannotReorder"
              },
              {
                "index": 37,
                "name": "WrongFunction"
              },
              {
                "index": 38,
                "name": "TransactionStale"
              },
              {
                "index": 39,
                "name": "NotEnoughSignatures"
              },
              {
                "index": 40,
                "name": "AlreadySigned"
              },
              {
                "index": 41,
                "name": "AlreadySignatory"
              },
              {
                "index": 42,
                "name": "UnderTimeMin"
              },
              {
                "index": 43,
                "name": "UnderThresholdMin"
              },
              {
                "index": 44,
                "name": "TooFewSignatories"
              },
              {
                "index": 45,
                "name": "NoSignatory"
              },
              {
                "index": 46,
                "name": "CallerIsSignatory"
              },
              {
                "index": 47,
                "name": "SignatoriesAreTheSame"
              },
              {
                "index": 48,
                "name": "TransactionAlreadyCalled"
              },
              {
                "fields": [
                  {
                    "type": 5,
                    "typeName": "String"
                  }
                ],
                "index": 49,
                "name": "Custom"
              }
            ]
          }
        },
        "path": [
          "ilockmvp",
          "ilockmvp",
          "OtherError"
        ]
      }
    },
    {
      "id": 19,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 1,
                "name": "CouldNotReadInput"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "LangError"
        ]
      }
    },
    {
      "id": 20,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 9
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 9
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 21,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 10
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 10
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 22,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 23
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 23
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 23,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 15
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 15
          },
          {
            "name": "E",
            "type": 18
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 24,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 4
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 4
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 25,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 26
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 26
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 26,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 12
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 12
          },
          {
            "name": "E",
            "type": 18
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 27,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 28
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 28
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 28,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 7
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 7
          },
          {
            "name": "E",
            "type": 18
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 29,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 30
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 30
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 30,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 31
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 31
          },
          {
            "name": "E",
            "type": 18
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 31,
      "type": {
        "def": {
          "sequence": {
            "type": 0
          }
        }
      }
    },
    {
      "id": 32,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 33
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 33
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 33,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 34
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 34
          },
          {
            "name": "E",
            "type": 18
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 34,
      "type": {
        "def": {
          "tuple": [
            5,
            5,
            5,
            5
          ]
        }
      }
    },
    {
      "id": 35,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 36
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 36
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 36,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 0
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 0
          },
          {
            "name": "E",
            "type": 18
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 37,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 0
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 0
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 38,
      "type": {
        "def": {
          "sequence": {
            "type": 4
          }
        }
      }
    },
    {
      "id": 39,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 40
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 40
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 40,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "operator",
                "type": 2,
                "typeName": "AccountId"
              },
              {
                "name": "portnumber",
                "type": 9,
                "typeName": "u16"
              }
            ]
          }
        },
        "path": [
          "ilockmvp",
          "ilockmvp",
          "Socket"
        ]
      }
    },
    {
      "id": 41,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 42
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 42
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 42,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "application",
                "type": 11,
                "typeName": "Hash"
              },
              {
                "name": "tax",
                "type": 0,
                "typeName": "Balance"
              },
              {
                "name": "cap",
                "type": 0,
                "typeName": "Balance"
              },
              {
                "name": "locked",
                "type": 6,
                "typeName": "bool"
              },
              {
                "name": "paid",
                "type": 0,
                "typeName": "Balance"
              },
              {
                "name": "collected",
                "type": 0,
                "typeName": "Balance"
              },
              {
                "name": "owner",
                "type": 2,
                "typeName": "AccountId"
              }
            ]
          }
        },
        "path": [
          "ilockmvp",
          "ilockmvp",
          "Port"
        ]
      }
    },
    {
      "id": 43,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 44
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 44
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 44,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 1
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 45
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 1
          },
          {
            "name": "E",
            "type": 45
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 45,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 5,
                    "typeName": "String"
                  }
                ],
                "index": 0,
                "name": "Custom"
              },
              {
                "index": 1,
                "name": "InsufficientBalance"
              },
              {
                "index": 2,
                "name": "InsufficientAllowance"
              },
              {
                "index": 3,
                "name": "ZeroRecipientAddress"
              },
              {
                "index": 4,
                "name": "ZeroSenderAddress"
              },
              {
                "fields": [
                  {
                    "type": 5,
                    "typeName": "String"
                  }
                ],
                "index": 5,
                "name": "SafeTransferCheckFailed"
              }
            ]
          }
        },
        "path": [
          "openbrush_contracts",
          "traits",
          "errors",
          "psp22",
          "PSP22Error"
        ]
      }
    },
    {
      "id": 46,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 47
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 47
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 47,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 5
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 5
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 48,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 6
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 6
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 49,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 2
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 2
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 50,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 51
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 51
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 51,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 1
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 52
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 1
          },
          {
            "name": "E",
            "type": 52
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 52,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "CallerIsNotOwner"
              },
              {
                "index": 1,
                "name": "NewOwnerIsZero"
              }
            ]
          }
        },
        "path": [
          "openbrush_contracts",
          "traits",
          "errors",
          "ownable",
          "OwnableError"
        ]
      }
    },
    {
      "id": 53,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 2
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 2
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 54,
      "type": {
        "def": {
          "primitive": "u32"
        }
      }
    },
    {
      "id": 55,
      "type": {
        "def": {
          "variant": {}
        },
        "path": [
          "ink_env",
          "types",
          "NoChainExtension"
        ]
      }
    }
  ],
  "version": "4"
}