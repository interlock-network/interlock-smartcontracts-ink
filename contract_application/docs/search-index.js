var searchIndex = JSON.parse('{\
"application":{"doc":"INTERLOCK NETWORK - GENERIC PORT/SOCKET APPLICATION …","t":"AGDDGGRDDNGGRRRNNNRGEEFMLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLMMLLLLLLLLLLLLMLLLLLLLLLLLLLLMFMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["application","AccountId","Application","ApplicationRef","Balance","BlockNumber","CONSTRUCTOR_0","CallBuilder","Check","Constructor0","Environment","Hash","MESSAGE_0","MESSAGE_1","MESSAGE_2","Message0","Message1","Message2","PORT","Timestamp","__ink_ConstructorDecoder","__ink_MessageDecoder","__ink_generate_metadata","account_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","call_mut","call_socket","call_socket","call_socket","change_operator","change_operator","change_operator","clone","clone","clone_into","clone_into","create_socket","create_socket","create_socket","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_dispatch","decode_dispatch","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deploy","encode","encode","encode","encode","encode","encode_to","encode_to","env","env","eq","eq","execute_dispatchable","execute_dispatchable","field_0","field_1","fmt","fmt","from","from","from","from","from","from","from_account_id","from_account_id","hash","hash","inner","into","into","into","into","into","into","layout","layout","layout","new_application","new_application","ok","ok","ok","operator","push_contract","salt","to_account_id","to_account_id","to_keyed_vec","to_keyed_vec","to_owned","to_owned","token_instance","try_call_socket","try_change_operator","try_create_socket","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","using_encoded","using_encoded"],"q":[[0,"application"],[1,"application::application"]],"d":["","","","","","","","The ink! smart contract’s call builder.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Make call to registed ILOCK PSP22 token contract socket.…","Make call to registed ILOCK PSP22 token contract socket.…","Make call to registed ILOCK PSP22 token contract socket.…","Change application operator.Only operator may call.","Change application operator.Only operator may call.","Change application operator.Only operator may call.","","","","","Register this application contract with the ILOCK PSP22 …","Register this application contract with the ILOCK PSP22 …","Register this application contract with the ILOCK PSP22 …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create new staking application contract linked to token …","Create new staking application contract linked to token …","","","","","","","","","","","","","","Make call to registed ILOCK PSP22 token contract socket.…","Change application operator.Only operator may call.","Register this application contract with the ILOCK PSP22 …","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,20,20,20,0,0,0,0,0,8,18,20,41,3,8,2,18,20,41,3,8,2,0,2,2,3,8,2,3,8,2,8,2,8,2,3,8,2,18,20,3,8,8,2,2,18,20,8,2,18,20,8,2,18,20,18,20,8,2,0,3,8,8,2,2,8,2,3,3,8,2,18,20,41,41,8,2,18,20,41,3,8,2,8,2,8,2,2,18,20,41,3,8,2,3,8,2,3,2,3,8,2,3,0,41,8,2,8,2,8,2,3,2,2,2,18,20,41,3,8,2,18,20,41,3,8,2,18,20,41,3,8,2,3,8,2,8,2],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2],[2],[[3,[5,[4]]],[[7,[6]]]],[[8,[5,[4]]],[[16,[[10,[9]],[10,[[14,[[13,[[11,[[5,[4]]]],[13,[11,[13,[11,12]]]]]]]]]],[10,[[15,[[7,[6]]]]]]]]]],[[2,[5,[4]]],[[7,[6]]]],[3,[[7,[6]]]],[8,[[16,[[10,[9]],[10,[[14,[[13,[11,12]]]]]],[10,[[15,[[7,[6]]]]]]]]]],[2,[[7,[6]]]],[8,8],[2,2],[[]],[[]],[3,[[7,[6]]]],[8,[[16,[[10,[9]],[10,[[14,[12]]]],[10,[[15,[[7,[6]]]]]]]]]],[2,[[7,[6]]]],[17,[[7,[18,19]]]],[17,[[7,[20,19]]]],[17,[[7,[3,19]]]],[17,[[7,[8,19]]]],[17,[[7,[19]]]],[17,[[7,[19]]]],[17,[[7,[2,19]]]],[[],[[7,[19]]]],[[],[[7,[19]]]],[[],[[7,[19]]]],[[],[[7,[19]]]],[21,[[7,[19]]]],[21,[[7,[19]]]],[21,[[7,[19]]]],[21,[[7,[19]]]],[17,[[7,[18,22]]]],[17,[[7,[20,22]]]],[[21,17],[[7,[19]]]],[[21,17],[[7,[19]]]],[[21,17],[[7,[19]]]],[[21,17],[[7,[19]]]],[[]],[[3,[0,[23,24]]]],[[[0,[23,24]]]],[8,[[5,[4]]]],[[[0,[23,24]]]],[2,[[5,[4]]]],[[8,[0,[23,24]]]],[[2,[0,[23,24]]]],[[]],[3],[[8,8],25],[[2,2],25],[18,[[7,[22]]]],[20,[[7,[22]]]],0,0,[[8,26],27],[[2,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],2],[[8,28]],[[2,28]],0,[[]],[[]],[[]],[[]],[[]],[[]],[29,30],[29,30],[29,30],[[],3],[[],[[34,[2,31,[31,[32]],31,[10,[[14,[[13,[11,12]]]]]],[31,[33]],[10,[[15,[2]]]]]]]],[2],[[]],[[]],0,[[[35,[3]],25]],0,[8],[2],[[],[[5,[4,36]]]],[[],[[5,[4,36]]]],[[]],[[]],0,[[2,[5,[4]]],[[37,[[7,[6]]]]]],[2,[[37,[[7,[6]]]]]],[2,[[37,[[7,[6]]]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],[[],39],[[8,40]],[[2,40]]],"c":[],"p":[[3,"InkProject"],[3,"ApplicationRef"],[3,"Application"],[15,"u8"],[3,"Vec"],[4,"OtherError"],[4,"Result"],[3,"CallBuilder"],[3,"Call"],[3,"Set"],[3,"Argument"],[6,"EmptyArgumentList"],[3,"ArgumentList"],[3,"ExecutionInput"],[3,"ReturnType"],[3,"CallBuilder"],[8,"Input"],[4,"__ink_ConstructorDecoder"],[3,"Error"],[4,"__ink_MessageDecoder"],[15,"u32"],[4,"DispatchError"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[6,"Key"],[4,"Layout"],[3,"Unset"],[15,"u64"],[4,"Salt"],[3,"CreateBuilder"],[3,"ManuallyDrop"],[3,"Global"],[6,"MessageResult"],[3,"TypeId"],[3,"Type"],[8,"FnOnce"],[3,"Check"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
